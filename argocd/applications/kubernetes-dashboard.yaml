apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kubernetes-dashboard
  namespace: argocd
  annotations:
    argocd.argoproj.io/description: "Kubernetes Dashboard - Web-based UI for Kubernetes clusters"
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
spec:
  project: default
  source:
    repoURL: https://kubernetes.github.io/dashboard/
    chart: kubernetes-dashboard
    targetRevision: 7.11.0
    helm:
      values: |
        # Enable metrics scraper
        metricsScraper:
          enabled: true

        # Dashboard configuration
        app:
          ingress:
            enabled: false

        # Kong configuration for the proxy
        kong:
          proxy:
            type: NodePort
            nodePort: 30507

        # RBAC Configuration
        rbac:
          create: true
          clusterReadOnlyRole: true

        # Service Account
        serviceAccount:
          create: true
          name: kubernetes-dashboard

        # Extra resources to create admin user and NodePort service
        extraManifests:
          - |
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: admin-user
              namespace: kubernetes-dashboard
          - |
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: admin-user
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: cluster-admin
            subjects:
            - kind: ServiceAccount
              name: admin-user
              namespace: kubernetes-dashboard
          - |
            apiVersion: v1
            kind: Service
            metadata:
              name: kubernetes-dashboard-nodeport
              namespace: kubernetes-dashboard
              labels:
                app.kubernetes.io/name: kubernetes-dashboard-nodeport
            spec:
              type: NodePort
              ports:
                - port: 443
                  targetPort: 8443
                  nodePort: 30507
                  protocol: TCP
                  name: https
              selector:
                app.kubernetes.io/component: app
                app.kubernetes.io/instance: kubernetes-dashboard
                app.kubernetes.io/name: kong

        # Security settings
        protocolHttp: false
        settings:
          clusterName: "KubeQuest Cluster"
          itemsPerPage: 20
          labelsLimit: 3
          logsAutoRefreshTimeInterval: 5
          resourceAutoRefreshTimeInterval: 5
          disableAccessDeniedNotifications: false
  destination:
    server: https://kubernetes.default.svc
    namespace: kubernetes-dashboard
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
