apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kubernetes-dashboard
  namespace: argocd
  annotations:
    argocd.argoproj.io/description: "Kubernetes Dashboard - Web-based UI for Kubernetes clusters"
  labels:
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: kubernetes-dashboard
spec:
  project: default
  source:
    repoURL: https://kubernetes.github.io/dashboard/
    chart: kubernetes-dashboard
    targetRevision: 7.11.0
    helm:
      values: |
        # Enable metrics scraper
        metricsScraper:
          enabled: true

        # Dashboard configuration
        app:
          ingress:
            enabled: true
            ingressClassName: nginx
            hosts:
              - host: dashboard.example.com
                paths:
                  - path: /
                    pathType: Prefix
            tls:
              - secretName: dashboard-tls
                hosts:
                  - dashboard.example.com
            annotations:
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              nginx.ingress.kubernetes.io/ssl-passthrough: "true"

        # Service configuration to expose via NodePort as well
        service:
          type: NodePort
          nodePort: 30507
          externalPort: 8443

        # RBAC Configuration
        rbac:
          create: true
          clusterReadOnlyRole: true

        # Service Account
        serviceAccount:
          create: true
          name: kubernetes-dashboard

        # Extra resources to create admin user
        extraManifests:
          - |
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: admin-user
              namespace: kubernetes-dashboard
          - |
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: admin-user
            roleRef:
              apiGroup: rbac.authorization.k8s.io
              kind: ClusterRole
              name: cluster-admin
            subjects:
            - kind: ServiceAccount
              name: admin-user
              namespace: kubernetes-dashboard

        # Security settings
        protocolHttp: false
        settings:
          clusterName: "KubeQuest Cluster"
          itemsPerPage: 20
          labelsLimit: 3
          logsAutoRefreshTimeInterval: 5
          resourceAutoRefreshTimeInterval: 5
          disableAccessDeniedNotifications: false
  destination:
    server: https://kubernetes.default.svc
    namespace: kubernetes-dashboard
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
